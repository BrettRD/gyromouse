#include "key_ascii_map.h"

const uint8_t key_ascii_map[128] =
{
  0x00,             // NUL
  0x00,             // SOH
  0x00,             // STX
  0x00,             // ETX
  0x00,             // EOT
  0x00,             // ENQ
  0x00,             // ACK
  0x00,             // BEL
  0x2a,             // BS   Backspace
  0x2b,             // TAB  Tab
  0x28,             // LF   Enter
  0x00,             // VT
  0x00,             // FF
  0x00,             // CR
  0x00,             // SO
  0x00,             // SI
  0x00,             // DEL
  0x00,             // DC1
  0x00,             // DC2
  0x00,             // DC3
  0x00,             // DC4
  0x00,             // NAK
  0x00,             // SYN
  0x00,             // ETB
  0x00,             // CAN
  0x00,             // EM
  0x00,             // SUB
  0x00,             // ESC
  0x00,             // FS
  0x00,             // GS
  0x00,             // RS
  0x00,             // US

  0x2c,             //  SPACE
  0x1e|KEY_ACSII_MAP_SHIFT,    // !
  0x34|KEY_ACSII_MAP_SHIFT,    // "
  0x20|KEY_ACSII_MAP_SHIFT,    // #
  0x21|KEY_ACSII_MAP_SHIFT,    // $
  0x22|KEY_ACSII_MAP_SHIFT,    // %
  0x24|KEY_ACSII_MAP_SHIFT,    // &
  0x34,          // '
  0x26|KEY_ACSII_MAP_SHIFT,    // (
  0x27|KEY_ACSII_MAP_SHIFT,    // )
  0x25|KEY_ACSII_MAP_SHIFT,    // *
  0x2e|KEY_ACSII_MAP_SHIFT,    // +
  0x36,          // ,
  0x2d,          // -
  0x37,          // .
  0x38,          // /
  KC_0,          // 0
  KC_1,          // 1
  KC_2,          // 2
  KC_3,          // 3
  KC_4,          // 4
  KC_5,          // 5
  KC_6,          // 6
  KC_7,          // 7
  KC_8,          // 8
  KC_9,          // 9
  0x33|KEY_ACSII_MAP_SHIFT,      // :
  0x33,          // ;
  0x36|KEY_ACSII_MAP_SHIFT,      // <
  0x2e,          // =
  0x37|KEY_ACSII_MAP_SHIFT,      // >
  0x38|KEY_ACSII_MAP_SHIFT,      // ?
  0x1f|KEY_ACSII_MAP_SHIFT,      // @
  KC_ALPHA('a')|KEY_ACSII_MAP_SHIFT,      // A
  KC_ALPHA('b')|KEY_ACSII_MAP_SHIFT,      // B
  KC_ALPHA('c')|KEY_ACSII_MAP_SHIFT,      // C
  KC_ALPHA('d')|KEY_ACSII_MAP_SHIFT,      // D
  KC_ALPHA('e')|KEY_ACSII_MAP_SHIFT,      // E
  KC_ALPHA('f')|KEY_ACSII_MAP_SHIFT,      // F
  KC_ALPHA('g')|KEY_ACSII_MAP_SHIFT,      // G
  KC_ALPHA('h')|KEY_ACSII_MAP_SHIFT,      // H
  KC_ALPHA('i')|KEY_ACSII_MAP_SHIFT,      // I
  KC_ALPHA('j')|KEY_ACSII_MAP_SHIFT,      // J
  KC_ALPHA('k')|KEY_ACSII_MAP_SHIFT,      // K
  KC_ALPHA('l')|KEY_ACSII_MAP_SHIFT,      // L
  KC_ALPHA('m')|KEY_ACSII_MAP_SHIFT,      // M
  KC_ALPHA('n')|KEY_ACSII_MAP_SHIFT,      // N
  KC_ALPHA('o')|KEY_ACSII_MAP_SHIFT,      // O
  KC_ALPHA('p')|KEY_ACSII_MAP_SHIFT,      // P
  KC_ALPHA('q')|KEY_ACSII_MAP_SHIFT,      // Q
  KC_ALPHA('r')|KEY_ACSII_MAP_SHIFT,      // R
  KC_ALPHA('s')|KEY_ACSII_MAP_SHIFT,      // S
  KC_ALPHA('t')|KEY_ACSII_MAP_SHIFT,      // T
  KC_ALPHA('u')|KEY_ACSII_MAP_SHIFT,      // U
  KC_ALPHA('v')|KEY_ACSII_MAP_SHIFT,      // V
  KC_ALPHA('w')|KEY_ACSII_MAP_SHIFT,      // W
  KC_ALPHA('x')|KEY_ACSII_MAP_SHIFT,      // X
  KC_ALPHA('y')|KEY_ACSII_MAP_SHIFT,      // Y
  KC_ALPHA('z')|KEY_ACSII_MAP_SHIFT,      // Z
  0x2f,          // [
  0x31,          // bslash
  0x30,          // ]
  0x23|KEY_ACSII_MAP_SHIFT,    // ^
  0x2d|KEY_ACSII_MAP_SHIFT,    // _
  0x35,          // `
  KC_ALPHA('a'),          // a
  KC_ALPHA('b'),          // b
  KC_ALPHA('c'),          // c
  KC_ALPHA('d'),          // d
  KC_ALPHA('e'),          // e
  KC_ALPHA('f'),          // f
  KC_ALPHA('g'),          // g
  KC_ALPHA('h'),          // h
  KC_ALPHA('i'),          // i
  KC_ALPHA('j'),          // j
  KC_ALPHA('k'),          // k
  KC_ALPHA('l'),          // l
  KC_ALPHA('m'),          // m
  KC_ALPHA('n'),          // n
  KC_ALPHA('o'),          // o
  KC_ALPHA('p'),          // p
  KC_ALPHA('q'),          // q
  KC_ALPHA('r'),          // r
  KC_ALPHA('s'),          // s
  KC_ALPHA('t'),          // t
  KC_ALPHA('u'),          // u
  KC_ALPHA('v'),          // v
  KC_ALPHA('w'),          // w
  KC_ALPHA('x'),          // x
  KC_ALPHA('y'),          // y
  KC_ALPHA('z'),          // z
  0x2f|KEY_ACSII_MAP_SHIFT,    // {
  0x31|KEY_ACSII_MAP_SHIFT,    // |
  0x30|KEY_ACSII_MAP_SHIFT,    // }
  0x35|KEY_ACSII_MAP_SHIFT,    // ~
  0        // DEL
};
